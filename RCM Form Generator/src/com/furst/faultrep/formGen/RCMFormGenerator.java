/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.furst.faultrep.formGen;

import com.furst.faultrep.menus.AppMenuPrimaryEntry;
import com.furst.faultrep.menus.RibbonPanel;
import com.furst.faultrep.tables.FolderTableModel;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTextField;
import org.pushingpixels.flamingo.api.common.JCommandButton;
import org.pushingpixels.flamingo.api.common.icon.ImageWrapperResizableIcon;
import org.pushingpixels.flamingo.api.common.icon.ResizableIcon;
import org.pushingpixels.flamingo.api.ribbon.JFlowRibbonBand;
import org.pushingpixels.flamingo.api.ribbon.JRibbonBand;
import org.pushingpixels.flamingo.api.ribbon.JRibbonComponent;
import org.pushingpixels.flamingo.api.ribbon.JRibbonFrame;
import org.pushingpixels.flamingo.api.ribbon.RibbonApplicationMenu;
import org.pushingpixels.flamingo.api.ribbon.RibbonElementPriority;
import org.pushingpixels.flamingo.api.ribbon.RibbonTask;
import org.pushingpixels.flamingo.api.ribbon.resize.CoreRibbonResizePolicies;
import org.pushingpixels.flamingo.api.ribbon.resize.IconRibbonBandResizePolicy;

/**
 *
 * @author tfurst
 */
public class RCMFormGenerator extends JRibbonFrame {

    /**
     * Creates new form RCMFormGenerator
     */
    public RCMFormGenerator() {
        initComponents();
        this.setApplicationIcon(getIcon("rcmLogoNoBg32x32.png"));
        setRibbon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        List<DataModuleObject> dummyList = new ArrayList();
        DataModuleObject dmo = new DataModuleObject("TEST",true,false);
        dummyList.add(dmo);
        ftm = new FolderTableModel(dummyList);
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Forms Generator");
        setMinimumSize(new java.awt.Dimension(300, 200));

        jTable1.setModel(ftm);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Process Output"));

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RCMFormGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RCMFormGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RCMFormGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RCMFormGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RCMFormGenerator().setVisible(true);
            }
        });
    }

    private ResizableIcon getIcon(String res) {
        String resource = "com/furst/faultrep/icons/" + res;
        return ImageWrapperResizableIcon.getIcon(RCMFormGenerator.class.getClassLoader().getResource(resource), new Dimension(32, 32));
    }
    
    
    private void setRibbon() {
        /*
            Declare all of these items as global vars
         */
//        RichTooltip rtp = new RichTooltip();
//        rtp.addDescriptionSection("Creates a new DB in MySQL Server. Root password is requried.");
        createSettingsBand = new JRibbonBand("Input", null);
        createSettingsBand2 = new JFlowRibbonBand("Output settings", null);
        outputBand = new JRibbonBand("Ouput types", null);

        b1b = new JCommandButton("Create new DB", getIcon("database.png"));
        b1b.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
            }
        });
        b1 = new JCommandButton("Choose Folder", getIcon("folder-12.png"));
        b1.setDisabledIcon(getIcon("database-15.png"));
        b1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
            }
        });
//        b1a = new JCommandButton("Update and maintain DMs", getIcon("database-16.png"));
//        b1a.setDisabledIcon(getIcon("database-16.png"));

        b2 = new JCommandButton("Compare DM content to DB", getIcon("view.png"));
        b3 = new JCommandButton("Create Data Module(s) from DB", getIcon("file-4.png"));
        
        mylabel = new javax.swing.JLabel();
        myjtf = new javax.swing.JTextField();
        mylabel.setText("Writer");
        myjtf.setColumns(100);
        
        rp = new RibbonPanel();
        
        JRibbonComponent jrc = new JRibbonComponent(rp);
        //JRibbonComponent jrc2 = new JRibbonComponent(myjtf);
        
        createSettingsBand.addCommandButton(b1, RibbonElementPriority.TOP);
        //createSettingsBand.addCommandButton(b1a, RibbonElementPriority.TOP);
        createSettingsBand2.addFlowComponent(jrc);
        //createSettingsBand2.addRibbonComponent(jrc2);
        outputBand.addCommandButton(b2, RibbonElementPriority.TOP);
        outputBand.addCommandButton(b3, RibbonElementPriority.TOP);

        createSettingsBand.setResizePolicies((List) Arrays.asList(new CoreRibbonResizePolicies.None(createSettingsBand.getControlPanel()), new IconRibbonBandResizePolicy(createSettingsBand.getControlPanel())));
        //createSettingsBand2.setResizePolicies((List) Arrays.asList(new CoreRibbonResizePolicies.(createSettingsBand2.getControlPanel())));
        createSettingsBand2.setResizePolicies((List) Arrays.asList(new CoreRibbonResizePolicies.FlowThreeRows(createSettingsBand2.getControlPanel())));
        outputBand.setResizePolicies((List) Arrays.asList(new CoreRibbonResizePolicies.None(outputBand.getControlPanel()), new IconRibbonBandResizePolicy(outputBand.getControlPanel())));

        createTask = new RibbonTask("Generator Functions", createSettingsBand, createSettingsBand2,outputBand);

        menu = new AppMenu();

        this.getRibbon().setApplicationMenu(menu);
        this.getRibbon().addTask(createTask);

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private javax.swing.JLabel mylabel;
    private javax.swing.JTextField myjtf;
    
    private RibbonPanel rp;
    private RibbonTask createTask; //Database actions tab
    
    private RibbonApplicationMenu menu;
    
    private JRibbonBand createSettingsBand;
    private JFlowRibbonBand createSettingsBand2;
    private JRibbonBand outputBand;
    
    private JCommandButton b1;
    private JCommandButton b1b;
    private JCommandButton b2;
    private JCommandButton b3;
    
    private FolderTableModel ftm;
class AppMenu extends RibbonApplicationMenu {

        private boolean testBool = false;
        private AppMenuPrimaryEntry exitEntry;

        public AppMenu() {
            
            exitEntry = new AppMenuPrimaryEntry(getIcon("exit.png"), "Exit", new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.exit(0);//To change body of generated methods, choose Tools | Templates.
                }
            }, JCommandButton.CommandButtonKind.ACTION_ONLY);

            this.addMenuEntry(exitEntry);

        }
    }
}
